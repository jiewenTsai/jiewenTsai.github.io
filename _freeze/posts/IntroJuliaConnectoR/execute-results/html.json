{
  "hash": "a915f0015c1f735e256ac0b899749b00",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to `JuliaConnectoR`\"\nauthor: \"JT\"\ndate: \"2024-11-19\"\n---\n\n\nI've just updated my Julia package, `ExtendedRtIrtModeling.jl`, to version 0.2.0. There are a few new features in there that I'll run through in the next few sections.\n\nBut that's not all! If you're an R user, I'll introduce you to an R package called `JuliaConnectoR` that lets you run Julia programs in R. It'll bridge the two languages seamlessly.\n\n## Using in Julia\n\nSee the Github page.\n\n## Using in R\n\nAll you have to do is to install and library the `JuliaConnectoR` as usual, and then you can use the `juliaImport` function to import any Julia package. The great thing is, it'll always download the newest version from Github, but not the stable one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(JuliaConnectoR)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'JuliaConnectoR' was built under R version 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\n## You have to give a name to the Julia Environment.\nex <- juliaImport(\"ExtendedRtIrtModeling\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nStarting Julia ...\n```\n\n\n:::\n\n```{.r .cell-code}\n## See the objects in ex.\nls(ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"coef\"                          \"drawItemDifficulty\"           \n [3] \"drawItemDiscrimination\"        \"drawItemIntensity\"            \n [5] \"drawItemIntensityCross\"        \"drawItemIntensityCrossQr\"     \n [7] \"drawItemTimeResidual\"          \"drawItemTimeResidualCross\"    \n [9] \"drawItemTimeResidualCrossQr\"   \"drawQrWeightsCrossQr\"         \n[11] \"drawQrWeightsLatentQr\"         \"drawRaPgRandomVariable\"       \n[13] \"drawSubjAbility\"               \"drawSubjAbilityNull\"          \n[15] \"drawSubjCoefficients\"          \"drawSubjCorrCross\"            \n[17] \"drawSubjCorrCrossQr\"           \"drawSubjCovariance\"           \n[19] \"drawSubjCovariance2One\"        \"drawSubjCovarianceLatent\"     \n[21] \"drawSubjCovarianceLatentQr\"    \"drawSubjCovarianceNull\"       \n[23] \"drawSubjCovarianceNull2One\"    \"drawSubjSpeed\"                \n[25] \"drawSubjSpeedCross\"            \"drawSubjSpeedCrossQr\"         \n[27] \"drawSubjSpeedLatent\"           \"drawSubjSpeedLatentQr\"        \n[29] \"drawSubjSpeedNull\"             \"eval\"                         \n[31] \"evaluate\"                      \"getBias\"                      \n[33] \"getDic\"                        \"getLogLikelihoodMlIrt\"        \n[35] \"getLogLikelihoodRtIrt\"         \"getLogLikelihoodRtIrtCross\"   \n[37] \"getLogLikelihoodRtIrtCrossQr\"  \"getLogLikelihoodRtIrtLatent\"  \n[39] \"getLogLikelihoodRtIrtLatentQr\" \"getLogLikelihoodRtIrtNull\"    \n[41] \"getPrecisTable\"                \"getRmse\"                      \n[43] \"getSubjCoefficients\"           \"getSubjCoefficientsLatent\"    \n[45] \"getSubjCoefficientsLatentQr\"   \"getSubjCoefficientsMlIrt\"     \n[47] \"GibbsMlIrt\"                    \"GibbsRtIrt\"                   \n[49] \"GibbsRtIrt2\"                   \"GibbsRtIrtCross\"              \n[51] \"GibbsRtIrtCross2\"              \"GibbsRtIrtCrossQr\"            \n[53] \"GibbsRtIrtLatent\"              \"GibbsRtIrtLatent2\"            \n[55] \"GibbsRtIrtLatentQr\"            \"GibbsRtIrtNull\"               \n[57] \"include\"                       \"InputData\"                    \n[59] \"InputPara\"                     \"OutputDic\"                    \n[61] \"OutputPost\"                    \"OutputPostCross\"              \n[63] \"OutputPostCrossQr\"             \"OutputPostMlIrt\"              \n[65] \"OutputPostRtIrtLatent\"         \"OutputPostRtIrtLatentQr\"      \n[67] \"precis\"                        \"sample!\"                      \n[69] \"setCond\"                       \"setTrueParaRtIrt\"             \n[71] \"SimConditions\"                 \"SimEvaluation\"                \n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}